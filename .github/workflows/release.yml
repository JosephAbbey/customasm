name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@master

    - name: Install latest Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: x86_64-pc-windows-gnu

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --verbose

  windows_build:
    name: Windows Build
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@master

    - name: Install latest Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: x86_64-pc-windows-gnu

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --verbose --target=x86_64-pc-windows-gnu

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: x86_64-pc-windows-gnu.exe
        path: ./target/x86_64-pc-windows-gnu/release/customasm.exe

  linux_build:
    name: Linux Build
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@master

    - name: Install latest Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: x86_64-unknown-linux-gnu

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --verbose --target=x86_64-unknown-linux-gnu

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: x86_64-unknown-linux-gnu
        path: ./target/x86_64-unknown-linux-gnu/release/customasm

  release:
    needs: [windows_build, linux_build]
    runs-on: ubuntu-latest

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: Here's a new release! [Check out the changelog!](https://github.com/hlorenzi/customasm/wiki/Changelog)
        draft: false
        prerelease: false

    - name: Download Windows Build
      uses: actions/download-artifact@v3
      with:
        name: x86_64-pc-windows-gnu.exe

    - name: Download Linux Build
      uses: actions/download-artifact@v3
      with:
        name: x86_64-unknown-linux-gnu

    - name: Prepare Release asset
      run: zip -r pkg.zip .

    - name: Upload Release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pkg.zip
        asset_name: customasm.zip
        asset_content_type: application/zip